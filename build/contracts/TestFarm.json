{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakeToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserAmountMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMaxAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_allowed",
          "type": "bool"
        }
      ],
      "name": "setTestingAllowed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeToken",
      "outputs": [
        {
          "internalType": "contract StakeToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testingAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
    "1": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol",
    "2": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/IERC20.sol",
    "3": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "4": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol",
    "5": "contracts/StakeToken.sol",
    "6": "contracts/TestFarm.sol"
  },
  "ast": {
    "absolutePath": "contracts/TestFarm.sol",
    "exportedSymbols": {
      "Context": [
        948
      ],
      "ERC20": [
        824
      ],
      "IERC20": [
        1026
      ],
      "IERC20Metadata": [
        1051
      ],
      "Ownable": [
        238
      ],
      "StakeToken": [
        926
      ],
      "TestFarm": [
        133
      ]
    },
    "id": 134,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 134,
        "sourceUnit": 825,
        "src": "58:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/justa/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 134,
        "sourceUnit": 239,
        "src": "114:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/StakeToken.sol",
        "file": "./StakeToken.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 134,
        "sourceUnit": 927,
        "src": "167:26:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 238,
              "src": "216:7:6"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "216:7:6"
          }
        ],
        "canonicalName": "TestFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 133,
        "linearizedBaseContracts": [
          133,
          238,
          948
        ],
        "name": "TestFarm",
        "nameLocation": "204:8:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "51ed6a30",
            "id": 9,
            "mutability": "mutable",
            "name": "stakeToken",
            "nameLocation": "248:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "230:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakeToken_$926",
              "typeString": "contract StakeToken"
            },
            "typeName": {
              "id": 8,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7,
                "name": "StakeToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 926,
                "src": "230:10:6"
              },
              "referencedDeclaration": 926,
              "src": "230:10:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakeToken_$926",
                "typeString": "contract StakeToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cc9d7aff",
            "id": 11,
            "mutability": "mutable",
            "name": "testingAllowed",
            "nameLocation": "276:14:6",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "264:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "264:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f48f393",
            "id": 13,
            "mutability": "mutable",
            "name": "maxAmount",
            "nameLocation": "311:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "296:24:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "296:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3c7e7d28",
            "id": 17,
            "mutability": "mutable",
            "name": "addressToAmount",
            "nameLocation": "361:15:6",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "326:50:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 16,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "334:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "326:27:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 15,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "345:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 19,
            "mutability": "mutable",
            "name": "totalMinted",
            "nameLocation": "390:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 133,
            "src": "382:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "382:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "448:146:6",
              "statements": [
                {
                  "expression": {
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "stakeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "458:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeToken_$926",
                        "typeString": "contract StakeToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 26,
                          "name": "_stakeToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "482:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25,
                        "name": "StakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 926,
                        "src": "471:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakeToken_$926_$",
                          "typeString": "type(contract StakeToken)"
                        }
                      },
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "471:23:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakeToken_$926",
                        "typeString": "contract StakeToken"
                      }
                    },
                    "src": "458:36:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakeToken_$926",
                      "typeString": "contract StakeToken"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "458:36:6"
                },
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "testingAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "505:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "522:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "505:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "505:22:6"
                },
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "maxAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "537:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31303030",
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "549:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "556:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "560:2:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "556:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "549:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000000"
                      }
                    },
                    "src": "537:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "537:25:6"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "totalMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "572:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "586:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "572:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "572:15:6"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_stakeToken",
                  "nameLocation": "428:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "420:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "419:21:6"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:0:6"
            },
            "scope": 133,
            "src": "408:186:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "653:322:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 55,
                        "name": "testingAllowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "671:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54657374696e67206973206e6f7420616c6c6f776564207269676874206e6f77",
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "687:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9ac427fdfdd9bc80b9661d758a33a22dcbf184d137f5b48c52da899d2146a90",
                          "typeString": "literal_string \"Testing is not allowed right now\""
                        },
                        "value": "Testing is not allowed right now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9ac427fdfdd9bc80b9661d758a33a22dcbf184d137f5b48c52da899d2146a90",
                          "typeString": "literal_string \"Testing is not allowed right now\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "663:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:59:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "663:59:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 60,
                              "name": "addressToAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "753:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 62,
                            "indexExpression": {
                              "id": 61,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49,
                              "src": "769:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "753:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 63,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "778:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "753:32:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 65,
                          "name": "maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "789:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "753:45:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520686176652072657175657374656420746f6f206d75636821",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "812:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4884f2a4d402d5c7a825e8dcd41f72f082e7b237ff1d4d047a59547f3f756e43",
                          "typeString": "literal_string \"You have requested too much!\""
                        },
                        "value": "You have requested too much!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4884f2a4d402d5c7a825e8dcd41f72f082e7b237ff1d4d047a59547f3f756e43",
                          "typeString": "literal_string \"You have requested too much!\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "732:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "732:120:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "732:120:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "878:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "885:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 70,
                        "name": "stakeToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "862:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakeToken_$926",
                          "typeString": "contract StakeToken"
                        }
                      },
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 877,
                      "src": "862:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "862:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "862:31:6"
                },
                {
                  "expression": {
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 77,
                        "name": "addressToAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "903:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 79,
                      "indexExpression": {
                        "id": 78,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "919:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "903:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 80,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "929:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "903:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82,
                  "nodeType": "ExpressionStatement",
                  "src": "903:33:6"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "totalMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "946:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "961:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "946:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "946:22:6"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "609:4:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "622:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "614:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "637:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "629:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "613:32:6"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:0:6"
            },
            "scope": 133,
            "src": "600:375:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1040:42:6",
              "statements": [
                {
                  "expression": {
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 95,
                      "name": "testingAllowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1050:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 96,
                      "name": "_allowed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1067:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1050:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1050:25:6"
                }
              ]
            },
            "functionSelector": "5105b219",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 93,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "1030:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1030:9:6"
              }
            ],
            "name": "setTestingAllowed",
            "nameLocation": "990:17:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "_allowed",
                  "nameLocation": "1013:8:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1008:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1007:15:6"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1040:0:6"
            },
            "scope": 133,
            "src": "981:101:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1144:36:6",
              "statements": [
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "maxAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1154:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "1166:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1154:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1154:19:6"
                }
              ]
            },
            "functionSelector": "4fe47f70",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 104,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 180,
                  "src": "1134:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1134:9:6"
              }
            ],
            "name": "setMaxAmount",
            "nameLocation": "1097:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1118:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1110:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1109:17:6"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:0:6"
            },
            "scope": 133,
            "src": "1088:92:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1260:46:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 119,
                      "name": "addressToAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1277:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 121,
                    "indexExpression": {
                      "id": 120,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "1293:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1277:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 118,
                  "id": 122,
                  "nodeType": "Return",
                  "src": "1270:29:6"
                }
              ]
            },
            "functionSelector": "53336dc5",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserAmountMinted",
            "nameLocation": "1195:19:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1223:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1215:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:15:6"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1251:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1250:9:6"
            },
            "scope": 133,
            "src": "1186:120:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1368:35:6",
              "statements": [
                {
                  "expression": {
                    "id": 129,
                    "name": "totalMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "1385:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 128,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "1378:18:6"
                }
              ]
            },
            "functionSelector": "0ca1c5c9",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalMinted",
            "nameLocation": "1321:14:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:2:6"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1359:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1359:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1358:9:6"
            },
            "scope": 133,
            "src": "1312:91:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 134,
        "src": "195:1210:6",
        "usedErrors": []
      }
    ],
    "src": "33:1373:6"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161072438038061072483398101604081905261002f916100be565b6100383361006e565b600180546001600160a81b0319166001600160a01b03909216919091179055683635c9adc5dea0000060025560006004556100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610627806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806353336dc51161007157806353336dc5146101565780635f48f3931461017f578063715018a6146101885780638da5cb5b14610190578063cc9d7aff146101a1578063f2fde38b146101c557600080fd5b80630ca1c5c9146100b95780633c7e7d28146100d057806340c10f19146100f05780634fe47f70146101055780635105b2191461011857806351ed6a301461012b575b600080fd5b6004545b6040519081526020015b60405180910390f35b6100bd6100de36600461050f565b60036020526000908152604090205481565b6101036100fe366004610531565b6101d8565b005b61010361011336600461055b565b61035b565b610103610126366004610574565b61038a565b60015461013e906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6100bd61016436600461050f565b6001600160a01b031660009081526003602052604090205490565b6100bd60025481565b6101036103d2565b6000546001600160a01b031661013e565b6001546101b590600160a01b900460ff1681565b60405190151581526020016100c7565b6101036101d336600461050f565b610408565b600154600160a01b900460ff166102365760405162461bcd60e51b815260206004820181905260248201527f54657374696e67206973206e6f7420616c6c6f776564207269676874206e6f7760448201526064015b60405180910390fd5b6002546001600160a01b03831660009081526003602052604090205461025d908390610596565b11156102ab5760405162461bcd60e51b815260206004820152601c60248201527f596f7520686176652072657175657374656420746f6f206d7563682100000000604482015260640161022d565b6001546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b1580156102f957600080fd5b505af115801561030d573d6000803e3d6000fd5b505050506001600160a01b03821660009081526003602052604081208054839290610339908490610596565b9250508190555080600460008282546103529190610596565b90915550505050565b6000546001600160a01b031633146103855760405162461bcd60e51b815260040161022d906105bc565b600255565b6000546001600160a01b031633146103b45760405162461bcd60e51b815260040161022d906105bc565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031633146103fc5760405162461bcd60e51b815260040161022d906105bc565b61040660006104a3565b565b6000546001600160a01b031633146104325760405162461bcd60e51b815260040161022d906105bc565b6001600160a01b0381166104975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161022d565b6104a0816104a3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461050a57600080fd5b919050565b60006020828403121561052157600080fd5b61052a826104f3565b9392505050565b6000806040838503121561054457600080fd5b61054d836104f3565b946020939093013593505050565b60006020828403121561056d57600080fd5b5035919050565b60006020828403121561058657600080fd5b8135801515811461052a57600080fd5b600082198211156105b757634e487b7160e01b600052601160045260246000fd5b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212206609d5c12362437df530e5282288b568a643170975c061586410817e72d4dcd364736f6c634300080d0033",
  "bytecodeSha1": "5a788615e0b4ee1d9da47c7837e3765f31afc2f4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "TestFarm",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "18": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "TestFarm.mint": {
          "16": [
            671,
            685,
            true
          ],
          "17": [
            753,
            798,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "14": [
            2378,
            2395
          ],
          "15": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "11": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            1998,
            2071
          ],
          "13": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "5": {},
      "6": {
        "TestFarm.getTotalMinted": {
          "0": [
            1378,
            1396
          ]
        },
        "TestFarm.getUserAmountMinted": {
          "1": [
            1270,
            1299
          ]
        },
        "TestFarm.mint": {
          "3": [
            663,
            722
          ],
          "4": [
            732,
            852
          ],
          "5": [
            862,
            893
          ],
          "6": [
            903,
            936
          ],
          "7": [
            946,
            968
          ]
        },
        "TestFarm.setMaxAmount": {
          "9": [
            1154,
            1173
          ]
        },
        "TestFarm.setTestingAllowed": {
          "10": [
            1050,
            1075
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/ERC20",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/IERC20Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Ownable",
    "StakeToken"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806353336dc51161007157806353336dc5146101565780635f48f3931461017f578063715018a6146101885780638da5cb5b14610190578063cc9d7aff146101a1578063f2fde38b146101c557600080fd5b80630ca1c5c9146100b95780633c7e7d28146100d057806340c10f19146100f05780634fe47f70146101055780635105b2191461011857806351ed6a301461012b575b600080fd5b6004545b6040519081526020015b60405180910390f35b6100bd6100de36600461050f565b60036020526000908152604090205481565b6101036100fe366004610531565b6101d8565b005b61010361011336600461055b565b61035b565b610103610126366004610574565b61038a565b60015461013e906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6100bd61016436600461050f565b6001600160a01b031660009081526003602052604090205490565b6100bd60025481565b6101036103d2565b6000546001600160a01b031661013e565b6001546101b590600160a01b900460ff1681565b60405190151581526020016100c7565b6101036101d336600461050f565b610408565b600154600160a01b900460ff166102365760405162461bcd60e51b815260206004820181905260248201527f54657374696e67206973206e6f7420616c6c6f776564207269676874206e6f7760448201526064015b60405180910390fd5b6002546001600160a01b03831660009081526003602052604090205461025d908390610596565b11156102ab5760405162461bcd60e51b815260206004820152601c60248201527f596f7520686176652072657175657374656420746f6f206d7563682100000000604482015260640161022d565b6001546040516340c10f1960e01b81526001600160a01b03848116600483015260248201849052909116906340c10f1990604401600060405180830381600087803b1580156102f957600080fd5b505af115801561030d573d6000803e3d6000fd5b505050506001600160a01b03821660009081526003602052604081208054839290610339908490610596565b9250508190555080600460008282546103529190610596565b90915550505050565b6000546001600160a01b031633146103855760405162461bcd60e51b815260040161022d906105bc565b600255565b6000546001600160a01b031633146103b45760405162461bcd60e51b815260040161022d906105bc565b60018054911515600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031633146103fc5760405162461bcd60e51b815260040161022d906105bc565b61040660006104a3565b565b6000546001600160a01b031633146104325760405162461bcd60e51b815260040161022d906105bc565b6001600160a01b0381166104975760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161022d565b6104a0816104a3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461050a57600080fd5b919050565b60006020828403121561052157600080fd5b61052a826104f3565b9392505050565b6000806040838503121561054457600080fd5b61054d836104f3565b946020939093013593505050565b60006020828403121561056d57600080fd5b5035919050565b60006020828403121561058657600080fd5b8135801515811461052a57600080fd5b600082198211156105b757634e487b7160e01b600052601160045260246000fd5b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea26469706673582212206609d5c12362437df530e5282288b568a643170975c061586410817e72d4dcd364736f6c634300080d0033",
  "deployedSourceMap": "195:1210:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1312:91;1385:11;;1312:91;;;160:25:7;;;148:2;133:18;1312:91:6;;;;;;;;326:50;;;;;;:::i;:::-;;;;;;;;;;;;;;600:375;;;;;;:::i;:::-;;:::i;:::-;;1088:92;;;;;;:::i;:::-;;:::i;981:101::-;;;;;;:::i;:::-;;:::i;230:28::-;;;;;-1:-1:-1;;;;;230:28:6;;;;;;-1:-1:-1;;;;;1469:32:7;;;1451:51;;1439:2;1424:18;230:28:6;1287:221:7;1186:120:6;;;;;;:::i;:::-;-1:-1:-1;;;;;1277:22:6;1251:7;1277:22;;;:15;:22;;;;;;;1186:120;296:24;;;;;;1668:101:0;;;:::i;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;264:26:6;;;;;-1:-1:-1;;;264:26:6;;;;;;;;;1886:14:7;;1879:22;1861:41;;1849:2;1834:18;264:26:6;1721:187:7;1918:198:0;;;;;;:::i;:::-;;:::i;600:375:6:-;671:14;;-1:-1:-1;;;671:14:6;;;;663:59;;;;-1:-1:-1;;;663:59:6;;2115:2:7;663:59:6;;;2097:21:7;;;2134:18;;;2127:30;2193:34;2173:18;;;2166:62;2245:18;;663:59:6;;;;;;;;;789:9;;-1:-1:-1;;;;;753:22:6;;;;;;:15;:22;;;;;;:32;;778:7;;753:32;:::i;:::-;:45;;732:120;;;;-1:-1:-1;;;732:120:6;;2706:2:7;732:120:6;;;2688:21:7;2745:2;2725:18;;;2718:30;2784;2764:18;;;2757:58;2832:18;;732:120:6;2504:352:7;732:120:6;862:10;;:31;;-1:-1:-1;;;862:31:6;;-1:-1:-1;;;;;3053:32:7;;;862:31:6;;;3035:51:7;3102:18;;;3095:34;;;862:10:6;;;;:15;;3008:18:7;;862:31:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;903:22:6;;;;;;:15;:22;;;;;:33;;929:7;;903:22;:33;;929:7;;903:33;:::i;:::-;;;;;;;;961:7;946:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;600:375:6:o;1088:92::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1154:9:6::1;:19:::0;1088:92::o;981:101::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1050:14:6::1;:25:::0;;;::::1;;-1:-1:-1::0;;;1050:25:6::1;-1:-1:-1::0;;;;1050:25:6;;::::1;::::0;;;::::1;::::0;;981:101::o;1668::0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3703:2:7;1998:73:0::1;::::0;::::1;3685:21:7::0;3742:2;3722:18;;;3715:30;3781:34;3761:18;;;3754:62;-1:-1:-1;;;3832:18:7;;;3825:36;3878:19;;1998:73:0::1;3501:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:173:7:-;264:20;;-1:-1:-1;;;;;313:31:7;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:7:o;565:254::-;633:6;641;694:2;682:9;673:7;669:23;665:32;662:52;;;710:1;707;700:12;662:52;733:29;752:9;733:29;:::i;:::-;723:39;809:2;794:18;;;;781:32;;-1:-1:-1;;;565:254:7:o;824:180::-;883:6;936:2;924:9;915:7;911:23;907:32;904:52;;;952:1;949;942:12;904:52;-1:-1:-1;975:23:7;;824:180;-1:-1:-1;824:180:7:o;1009:273::-;1065:6;1118:2;1106:9;1097:7;1093:23;1089:32;1086:52;;;1134:1;1131;1124:12;1086:52;1173:9;1160:23;1226:5;1219:13;1212:21;1205:5;1202:32;1192:60;;1248:1;1245;1238:12;2274:225;2314:3;2345:1;2341:6;2338:1;2335:13;2332:136;;;2390:10;2385:3;2381:20;2378:1;2371:31;2425:4;2422:1;2415:15;2453:4;2450:1;2443:15;2332:136;-1:-1:-1;2484:9:7;;2274:225::o;3140:356::-;3342:2;3324:21;;;3361:18;;;3354:30;3420:34;3415:2;3400:18;;3393:62;3487:2;3472:18;;3140:356::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    195,
    1405
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x53336DC5 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x53336DC5 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x5F48F393 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xCC9D7AFF EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCA1C5C9 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3C7E7D28 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x4FE47F70 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x5105B219 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x51ED6A30 EQ PUSH2 0x12B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x531 JUMP JUMPDEST PUSH2 0x1D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x55B JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x103 PUSH2 0x126 CALLDATASIZE PUSH1 0x4 PUSH2 0x574 JUMP JUMPDEST PUSH2 0x38A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x13E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x13E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1B5 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH2 0x103 PUSH2 0x1D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54657374696E67206973206E6F7420616C6C6F776564207269676874206E6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x25D SWAP1 DUP4 SWAP1 PUSH2 0x596 JUMP JUMPDEST GT ISZERO PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520686176652072657175657374656420746F6F206D7563682100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x22D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x339 SWAP1 DUP5 SWAP1 PUSH2 0x596 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x596 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x385 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0xFF PUSH1 0xA0 SHL NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x406 PUSH1 0x0 PUSH2 0x4A3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x432 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x22D JUMP JUMPDEST PUSH2 0x4A0 DUP2 PUSH2 0x4A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x52A DUP3 PUSH2 0x4F3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x544 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54D DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x586 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x5B7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x9D5C12362437D CREATE2 ADDRESS 0xE5 0x28 0x22 DUP9 0xB5 PUSH9 0xA643170975C0615864 LT DUP2 PUSH31 0x72D4DCD364736F6C634300080D003300000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "5": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "6": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "7": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "8": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "12": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "REVERT",
      "path": "6"
    },
    "16": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "17": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "POP",
      "path": "6"
    },
    "18": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "21": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "LT",
      "path": "6"
    },
    "22": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB4"
    },
    "25": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "26": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "CALLDATALOAD",
      "path": "6"
    },
    "29": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "SHR",
      "path": "6"
    },
    "32": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "33": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x53336DC5"
    },
    "38": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "GT",
      "path": "6"
    },
    "39": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "43": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "44": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x53336DC5"
    },
    "49": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "50": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x156"
    },
    "53": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "54": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "55": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5F48F393"
    },
    "60": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "61": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17F"
    },
    "64": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "65": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "66": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x715018A6"
    },
    "71": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "72": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x188"
    },
    "75": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "76": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "77": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x8DA5CB5B"
    },
    "82": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "83": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x190"
    },
    "86": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "87": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "88": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCC9D7AFF"
    },
    "93": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "94": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A1"
    },
    "97": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "98": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "99": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "105": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1C5"
    },
    "108": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "109": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "112": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "REVERT",
      "path": "6"
    },
    "113": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "114": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "115": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0xCA1C5C9"
    },
    "120": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "121": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB9"
    },
    "124": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "125": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "126": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x3C7E7D28"
    },
    "131": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "132": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD0"
    },
    "135": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "136": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "137": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x40C10F19"
    },
    "142": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "143": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xF0"
    },
    "146": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "147": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "148": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x4FE47F70"
    },
    "153": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "154": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x105"
    },
    "157": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "158": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "159": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x5105B219"
    },
    "164": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "165": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x118"
    },
    "168": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "169": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "170": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x51ED6A30"
    },
    "175": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "EQ",
      "path": "6"
    },
    "176": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12B"
    },
    "179": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "180": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "181": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "183": {
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "DUP1",
      "path": "6"
    },
    "184": {
      "first_revert": true,
      "fn": null,
      "offset": [
        195,
        1405
      ],
      "op": "REVERT",
      "path": "6"
    },
    "185": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "186": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1385,
        1396
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 0,
      "value": "0x4"
    },
    "188": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1385,
        1396
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "189": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "190": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "192": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "193": {
      "op": "SWAP1"
    },
    "194": {
      "op": "DUP2"
    },
    "195": {
      "op": "MSTORE"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "198": {
      "op": "ADD"
    },
    "199": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "200": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "202": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "203": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "DUP1",
      "path": "6"
    },
    "204": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "205": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "SUB",
      "path": "6"
    },
    "206": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "207": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        1312,
        1403
      ],
      "op": "RETURN",
      "path": "6"
    },
    "208": {
      "offset": [
        326,
        376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "209": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD"
    },
    "212": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xDE"
    },
    "215": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "216": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "218": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50F"
    },
    "221": {
      "fn": "TestFarm.getTotalMinted",
      "jump": "i",
      "offset": [
        326,
        376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "222": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "223": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "225": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "227": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "228": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "230": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "231": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "DUP2",
      "path": "6"
    },
    "232": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "233": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "235": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "236": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "237": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "238": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "DUP2",
      "path": "6"
    },
    "239": {
      "fn": "TestFarm.getTotalMinted",
      "offset": [
        326,
        376
      ],
      "op": "JUMP",
      "path": "6"
    },
    "240": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "241": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x103"
    },
    "244": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFE"
    },
    "247": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "248": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "250": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x531"
    },
    "253": {
      "fn": "TestFarm.mint",
      "jump": "i",
      "offset": [
        600,
        975
      ],
      "op": "JUMP",
      "path": "6"
    },
    "254": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "255": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1D8"
    },
    "258": {
      "fn": "TestFarm.mint",
      "jump": "i",
      "offset": [
        600,
        975
      ],
      "op": "JUMP",
      "path": "6"
    },
    "259": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "260": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "STOP",
      "path": "6"
    },
    "261": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "262": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x103"
    },
    "265": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x113"
    },
    "268": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "269": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "271": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x55B"
    },
    "274": {
      "fn": "TestFarm.setMaxAmount",
      "jump": "i",
      "offset": [
        1088,
        1180
      ],
      "op": "JUMP",
      "path": "6"
    },
    "275": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "276": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x35B"
    },
    "279": {
      "fn": "TestFarm.setMaxAmount",
      "jump": "i",
      "offset": [
        1088,
        1180
      ],
      "op": "JUMP",
      "path": "6"
    },
    "280": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "281": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x103"
    },
    "284": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x126"
    },
    "287": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "288": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "290": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x574"
    },
    "293": {
      "fn": "TestFarm.setTestingAllowed",
      "jump": "i",
      "offset": [
        981,
        1082
      ],
      "op": "JUMP",
      "path": "6"
    },
    "294": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "295": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x38A"
    },
    "298": {
      "fn": "TestFarm.setTestingAllowed",
      "jump": "i",
      "offset": [
        981,
        1082
      ],
      "op": "JUMP",
      "path": "6"
    },
    "299": {
      "offset": [
        230,
        258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "300": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "302": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "303": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x13E"
    },
    "306": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "313": {
      "op": "SHL"
    },
    "314": {
      "op": "SUB"
    },
    "315": {
      "offset": [
        230,
        258
      ],
      "op": "AND",
      "path": "6"
    },
    "316": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "DUP2",
      "path": "6"
    },
    "317": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "JUMP",
      "path": "6"
    },
    "318": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "319": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "321": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        230,
        258
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "328": {
      "op": "SHL"
    },
    "329": {
      "op": "SUB"
    },
    "330": {
      "op": "SWAP1"
    },
    "331": {
      "op": "SWAP2"
    },
    "332": {
      "op": "AND"
    },
    "333": {
      "op": "DUP2"
    },
    "334": {
      "op": "MSTORE"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "337": {
      "op": "ADD"
    },
    "338": {
      "offset": [
        230,
        258
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7"
    },
    "341": {
      "op": "JUMP"
    },
    "342": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "343": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD"
    },
    "346": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x164"
    },
    "349": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "350": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "352": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x50F"
    },
    "355": {
      "fn": "TestFarm.getUserAmountMinted",
      "jump": "i",
      "offset": [
        1186,
        1306
      ],
      "op": "JUMP",
      "path": "6"
    },
    "356": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "361": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "363": {
      "op": "SHL"
    },
    "364": {
      "op": "SUB"
    },
    "365": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "AND",
      "path": "6",
      "statement": 1
    },
    "366": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1251,
        1258
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "368": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "369": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "DUP2",
      "path": "6"
    },
    "370": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "371": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1292
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "373": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "375": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "376": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "378": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "379": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "380": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "381": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1277,
        1299
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "382": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        1186,
        1306
      ],
      "op": "JUMP",
      "path": "6"
    },
    "383": {
      "offset": [
        296,
        320
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "384": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        296,
        320
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD"
    },
    "387": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        296,
        320
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x2"
    },
    "389": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        296,
        320
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "390": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        296,
        320
      ],
      "op": "DUP2",
      "path": "6"
    },
    "391": {
      "fn": "TestFarm.getUserAmountMinted",
      "offset": [
        296,
        320
      ],
      "op": "JUMP",
      "path": "6"
    },
    "392": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "396": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D2"
    },
    "399": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "400": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "401": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "403": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 2
    },
    "404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "op": "SUB"
    },
    "412": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "413": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "416": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "417": {
      "offset": [
        264,
        290
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "418": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "420": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "421": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B5"
    },
    "424": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "429": {
      "op": "SHL"
    },
    "430": {
      "offset": [
        264,
        290
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "431": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "DIV",
      "path": "6"
    },
    "432": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "434": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "AND",
      "path": "6"
    },
    "435": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "DUP2",
      "path": "6"
    },
    "436": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "JUMP",
      "path": "6"
    },
    "437": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "438": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "440": {
      "fn": "Ownable.owner",
      "offset": [
        264,
        290
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "441": {
      "op": "SWAP1"
    },
    "442": {
      "op": "ISZERO"
    },
    "443": {
      "op": "ISZERO"
    },
    "444": {
      "op": "DUP2"
    },
    "445": {
      "op": "MSTORE"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "offset": [
        264,
        290
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC7"
    },
    "452": {
      "op": "JUMP"
    },
    "453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103"
    },
    "457": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "460": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50F"
    },
    "466": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "467": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "468": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "471": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "472": {
      "fn": "TestFarm.mint",
      "offset": [
        600,
        975
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "473": {
      "fn": "TestFarm.mint",
      "offset": [
        671,
        685
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 3,
      "value": "0x1"
    },
    "475": {
      "fn": "TestFarm.mint",
      "offset": [
        671,
        685
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "480": {
      "op": "SHL"
    },
    "481": {
      "fn": "TestFarm.mint",
      "offset": [
        671,
        685
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "482": {
      "fn": "TestFarm.mint",
      "offset": [
        671,
        685
      ],
      "op": "DIV",
      "path": "6"
    },
    "483": {
      "fn": "TestFarm.mint",
      "offset": [
        671,
        685
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "485": {
      "branch": 16,
      "fn": "TestFarm.mint",
      "offset": [
        671,
        685
      ],
      "op": "AND",
      "path": "6"
    },
    "486": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x236"
    },
    "489": {
      "branch": 16,
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "490": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "492": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "499": {
      "op": "SHL"
    },
    "500": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "DUP2",
      "path": "6"
    },
    "501": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "502": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "504": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "506": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "DUP3",
      "path": "6"
    },
    "507": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "ADD",
      "path": "6"
    },
    "508": {
      "op": "DUP2"
    },
    "509": {
      "op": "SWAP1"
    },
    "510": {
      "op": "MSTORE"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "513": {
      "op": "DUP3"
    },
    "514": {
      "op": "ADD"
    },
    "515": {
      "op": "MSTORE"
    },
    "516": {
      "op": "PUSH32",
      "value": "0x54657374696E67206973206E6F7420616C6C6F776564207269676874206E6F77"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "551": {
      "op": "DUP3"
    },
    "552": {
      "op": "ADD"
    },
    "553": {
      "op": "MSTORE"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "556": {
      "op": "ADD"
    },
    "557": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "558": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "560": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "561": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "DUP1",
      "path": "6"
    },
    "562": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "563": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "SUB",
      "path": "6"
    },
    "564": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "565": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "6"
    },
    "566": {
      "fn": "TestFarm.mint",
      "offset": [
        663,
        722
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "567": {
      "fn": "TestFarm.mint",
      "offset": [
        789,
        798
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 4,
      "value": "0x2"
    },
    "569": {
      "fn": "TestFarm.mint",
      "offset": [
        789,
        798
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "574": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "576": {
      "op": "SHL"
    },
    "577": {
      "op": "SUB"
    },
    "578": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "DUP4",
      "path": "6"
    },
    "579": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "AND",
      "path": "6"
    },
    "580": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "582": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "583": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "DUP2",
      "path": "6"
    },
    "584": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "585": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        768
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "587": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "589": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "590": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "592": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "593": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "594": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        775
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "595": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        785
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x25D"
    },
    "598": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        785
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "599": {
      "fn": "TestFarm.mint",
      "offset": [
        778,
        785
      ],
      "op": "DUP4",
      "path": "6"
    },
    "600": {
      "fn": "TestFarm.mint",
      "offset": [
        778,
        785
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "601": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        785
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x596"
    },
    "604": {
      "fn": "TestFarm.mint",
      "jump": "i",
      "offset": [
        753,
        785
      ],
      "op": "JUMP",
      "path": "6"
    },
    "605": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        785
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "606": {
      "fn": "TestFarm.mint",
      "offset": [
        753,
        798
      ],
      "op": "GT",
      "path": "6"
    },
    "607": {
      "branch": 17,
      "fn": "TestFarm.mint",
      "offset": [
        753,
        798
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "608": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2AB"
    },
    "611": {
      "branch": 17,
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "612": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "614": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "615": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "619": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "DUP2",
      "path": "6"
    },
    "623": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "624": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "626": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "628": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "DUP3",
      "path": "6"
    },
    "629": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "ADD",
      "path": "6"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "635": {
      "op": "DUP3"
    },
    "636": {
      "op": "ADD"
    },
    "637": {
      "op": "MSTORE"
    },
    "638": {
      "op": "PUSH32",
      "value": "0x596F7520686176652072657175657374656420746F6F206D7563682100000000"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "678": {
      "op": "ADD"
    },
    "679": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x22D"
    },
    "682": {
      "op": "JUMP"
    },
    "683": {
      "fn": "TestFarm.mint",
      "offset": [
        732,
        852
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "684": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        872
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 5,
      "value": "0x1"
    },
    "686": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        872
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "687": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "689": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "690": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP2",
      "path": "6"
    },
    "699": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "706": {
      "op": "SHL"
    },
    "707": {
      "op": "SUB"
    },
    "708": {
      "op": "DUP5"
    },
    "709": {
      "op": "DUP2"
    },
    "710": {
      "op": "AND"
    },
    "711": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "713": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP4",
      "path": "6"
    },
    "714": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "ADD",
      "path": "6"
    },
    "715": {
      "op": "MSTORE"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "718": {
      "op": "DUP3"
    },
    "719": {
      "op": "ADD"
    },
    "720": {
      "op": "DUP5"
    },
    "721": {
      "op": "SWAP1"
    },
    "722": {
      "op": "MSTORE"
    },
    "723": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        872
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "724": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        872
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "725": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        872
      ],
      "op": "AND",
      "path": "6"
    },
    "726": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        872
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "727": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        877
      ],
      "op": "PUSH4",
      "path": "6",
      "value": "0x40C10F19"
    },
    "732": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        877
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "738": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "740": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "741": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP1",
      "path": "6"
    },
    "742": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP4",
      "path": "6"
    },
    "743": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "SUB",
      "path": "6"
    },
    "744": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP2",
      "path": "6"
    },
    "745": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "747": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP8",
      "path": "6"
    },
    "748": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP1",
      "path": "6"
    },
    "749": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "750": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "751": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP1",
      "path": "6"
    },
    "752": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "753": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2F9"
    },
    "756": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "757": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "759": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP1",
      "path": "6"
    },
    "760": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "REVERT",
      "path": "6"
    },
    "761": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "762": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "POP",
      "path": "6"
    },
    "763": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "GAS",
      "path": "6"
    },
    "764": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "CALL",
      "path": "6"
    },
    "765": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "766": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP1",
      "path": "6"
    },
    "767": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "768": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x30D"
    },
    "771": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "772": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "773": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "775": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "DUP1",
      "path": "6"
    },
    "776": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "RETURNDATACOPY",
      "path": "6"
    },
    "777": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "RETURNDATASIZE",
      "path": "6"
    },
    "778": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "780": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "REVERT",
      "path": "6"
    },
    "781": {
      "fn": "TestFarm.mint",
      "offset": [
        862,
        893
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "782": {
      "op": "POP"
    },
    "783": {
      "op": "POP"
    },
    "784": {
      "op": "POP"
    },
    "785": {
      "op": "POP"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "op": "SUB"
    },
    "794": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 6
    },
    "795": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "AND",
      "path": "6"
    },
    "796": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "798": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "799": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "DUP2",
      "path": "6"
    },
    "800": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "801": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        918
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x3"
    },
    "803": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "805": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "806": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "808": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "DUP2",
      "path": "6"
    },
    "809": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "810": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "DUP1",
      "path": "6"
    },
    "811": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "812": {
      "fn": "TestFarm.mint",
      "offset": [
        929,
        936
      ],
      "op": "DUP4",
      "path": "6"
    },
    "813": {
      "fn": "TestFarm.mint",
      "offset": [
        929,
        936
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "814": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        925
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "815": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x339"
    },
    "818": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "819": {
      "fn": "TestFarm.mint",
      "offset": [
        929,
        936
      ],
      "op": "DUP5",
      "path": "6"
    },
    "820": {
      "fn": "TestFarm.mint",
      "offset": [
        929,
        936
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "821": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x596"
    },
    "824": {
      "fn": "TestFarm.mint",
      "jump": "i",
      "offset": [
        903,
        936
      ],
      "op": "JUMP",
      "path": "6"
    },
    "825": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "826": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "827": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "POP",
      "path": "6"
    },
    "828": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "POP",
      "path": "6"
    },
    "829": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "DUP2",
      "path": "6"
    },
    "830": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "831": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "832": {
      "fn": "TestFarm.mint",
      "offset": [
        903,
        936
      ],
      "op": "POP",
      "path": "6"
    },
    "833": {
      "fn": "TestFarm.mint",
      "offset": [
        961,
        968
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 7
    },
    "834": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        957
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "836": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        957
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "838": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "DUP3",
      "path": "6"
    },
    "839": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "DUP3",
      "path": "6"
    },
    "840": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "841": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x352"
    },
    "844": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "845": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "846": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x596"
    },
    "849": {
      "fn": "TestFarm.mint",
      "jump": "i",
      "offset": [
        946,
        968
      ],
      "op": "JUMP",
      "path": "6"
    },
    "850": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "851": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "852": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "853": {
      "fn": "TestFarm.mint",
      "offset": [
        946,
        968
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "854": {
      "op": "POP"
    },
    "855": {
      "op": "POP"
    },
    "856": {
      "op": "POP"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "fn": "TestFarm.mint",
      "jump": "o",
      "offset": [
        600,
        975
      ],
      "op": "JUMP",
      "path": "6"
    },
    "859": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1088,
        1180
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "860": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "862": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "869": {
      "op": "SHL"
    },
    "870": {
      "op": "SUB"
    },
    "871": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "872": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 8
    },
    "873": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "874": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x385"
    },
    "877": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "880": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "881": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "887": {
      "op": "SHL"
    },
    "888": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "892": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "893": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "896": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "897": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BC"
    },
    "900": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "901": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "902": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1154,
        1163
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 9,
      "value": "0x2"
    },
    "904": {
      "fn": "TestFarm.setMaxAmount",
      "offset": [
        1154,
        1173
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "905": {
      "fn": "TestFarm.setMaxAmount",
      "jump": "o",
      "offset": [
        1088,
        1180
      ],
      "op": "JUMP",
      "path": "6"
    },
    "906": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        981,
        1082
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "907": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "909": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "914": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "916": {
      "op": "SHL"
    },
    "917": {
      "op": "SUB"
    },
    "918": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "919": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "920": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "921": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B4"
    },
    "924": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "925": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "927": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "928": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "936": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "937": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "939": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "940": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "943": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "944": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BC"
    },
    "947": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "948": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "949": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1064
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 10,
      "value": "0x1"
    },
    "951": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "DUP1",
      "path": "6"
    },
    "952": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "953": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "954": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "955": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "960": {
      "op": "SHL"
    },
    "961": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "MUL",
      "path": "6"
    },
    "962": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "966": {
      "op": "SHL"
    },
    "967": {
      "op": "NOT"
    },
    "968": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "969": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "970": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "AND",
      "path": "6"
    },
    "971": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "972": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "973": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "974": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "OR",
      "path": "6"
    },
    "975": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "976": {
      "fn": "TestFarm.setTestingAllowed",
      "offset": [
        1050,
        1075
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "977": {
      "fn": "TestFarm.setTestingAllowed",
      "jump": "o",
      "offset": [
        981,
        1082
      ],
      "op": "JUMP",
      "path": "6"
    },
    "978": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "979": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "981": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "988": {
      "op": "SHL"
    },
    "989": {
      "op": "SUB"
    },
    "990": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "991": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "992": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "993": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC"
    },
    "996": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "997": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "999": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1000": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1004": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1006": {
      "op": "SHL"
    },
    "1007": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1008": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1009": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1011": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1012": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "1015": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1016": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BC"
    },
    "1019": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1020": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1021": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x406"
    },
    "1024": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1026": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "1029": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1030": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1031": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1033": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1035": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "SUB"
    },
    "1044": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1045": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1046": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1047": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x432"
    },
    "1050": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1060": {
      "op": "SHL"
    },
    "1061": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1062": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1066": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "1069": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1070": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5BC"
    },
    "1073": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1074": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "SUB"
    },
    "1083": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1084": {
      "branch": 18,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "1085": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x497"
    },
    "1088": {
      "branch": 18,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1091": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1092": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1098": {
      "op": "SHL"
    },
    "1099": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1105": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1112": {
      "op": "DUP3"
    },
    "1113": {
      "op": "ADD"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1150": {
      "op": "DUP3"
    },
    "1151": {
      "op": "ADD"
    },
    "1152": {
      "op": "MSTORE"
    },
    "1153": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1165": {
      "op": "DUP3"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "op": "MSTORE"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1170": {
      "op": "ADD"
    },
    "1171": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "1174": {
      "op": "JUMP"
    },
    "1175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1176": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x4A0"
    },
    "1179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "1183": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1184": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "1186": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1187": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1188": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1190": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1191": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1198": {
      "op": "SHL"
    },
    "1199": {
      "op": "SUB"
    },
    "1200": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1201": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1202": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "op": "NOT"
    },
    "1212": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1213": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "1214": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1215": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "1216": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1217": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1218": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "1220": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1221": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1222": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1223": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1224": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "1225": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1226": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1227": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1228": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1262": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1265": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "1266": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1267": {
      "op": "JUMPDEST"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "CALLDATALOAD"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "SUB"
    },
    "1278": {
      "op": "DUP2"
    },
    "1279": {
      "op": "AND"
    },
    "1280": {
      "op": "DUP2"
    },
    "1281": {
      "op": "EQ"
    },
    "1282": {
      "op": "PUSH2",
      "value": "0x50A"
    },
    "1285": {
      "op": "JUMPI"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1288": {
      "op": "DUP1"
    },
    "1289": {
      "op": "REVERT"
    },
    "1290": {
      "op": "JUMPDEST"
    },
    "1291": {
      "op": "SWAP2"
    },
    "1292": {
      "op": "SWAP1"
    },
    "1293": {
      "op": "POP"
    },
    "1294": {
      "jump": "o",
      "op": "JUMP"
    },
    "1295": {
      "op": "JUMPDEST"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1300": {
      "op": "DUP3"
    },
    "1301": {
      "op": "DUP5"
    },
    "1302": {
      "op": "SUB"
    },
    "1303": {
      "op": "SLT"
    },
    "1304": {
      "op": "ISZERO"
    },
    "1305": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1308": {
      "op": "JUMPI"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1311": {
      "op": "DUP1"
    },
    "1312": {
      "op": "REVERT"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1317": {
      "op": "DUP3"
    },
    "1318": {
      "op": "PUSH2",
      "value": "0x4F3"
    },
    "1321": {
      "jump": "i",
      "op": "JUMP"
    },
    "1322": {
      "op": "JUMPDEST"
    },
    "1323": {
      "op": "SWAP4"
    },
    "1324": {
      "op": "SWAP3"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "op": "POP"
    },
    "1328": {
      "jump": "o",
      "op": "JUMP"
    },
    "1329": {
      "op": "JUMPDEST"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1332": {
      "op": "DUP1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1335": {
      "op": "DUP4"
    },
    "1336": {
      "op": "DUP6"
    },
    "1337": {
      "op": "SUB"
    },
    "1338": {
      "op": "SLT"
    },
    "1339": {
      "op": "ISZERO"
    },
    "1340": {
      "op": "PUSH2",
      "value": "0x544"
    },
    "1343": {
      "op": "JUMPI"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1346": {
      "op": "DUP1"
    },
    "1347": {
      "op": "REVERT"
    },
    "1348": {
      "op": "JUMPDEST"
    },
    "1349": {
      "op": "PUSH2",
      "value": "0x54D"
    },
    "1352": {
      "op": "DUP4"
    },
    "1353": {
      "op": "PUSH2",
      "value": "0x4F3"
    },
    "1356": {
      "jump": "i",
      "op": "JUMP"
    },
    "1357": {
      "op": "JUMPDEST"
    },
    "1358": {
      "op": "SWAP5"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1361": {
      "op": "SWAP4"
    },
    "1362": {
      "op": "SWAP1"
    },
    "1363": {
      "op": "SWAP4"
    },
    "1364": {
      "op": "ADD"
    },
    "1365": {
      "op": "CALLDATALOAD"
    },
    "1366": {
      "op": "SWAP4"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "op": "POP"
    },
    "1369": {
      "op": "POP"
    },
    "1370": {
      "jump": "o",
      "op": "JUMP"
    },
    "1371": {
      "op": "JUMPDEST"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1376": {
      "op": "DUP3"
    },
    "1377": {
      "op": "DUP5"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "op": "SLT"
    },
    "1380": {
      "op": "ISZERO"
    },
    "1381": {
      "op": "PUSH2",
      "value": "0x56D"
    },
    "1384": {
      "op": "JUMPI"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1387": {
      "op": "DUP1"
    },
    "1388": {
      "op": "REVERT"
    },
    "1389": {
      "op": "JUMPDEST"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "op": "CALLDATALOAD"
    },
    "1392": {
      "op": "SWAP2"
    },
    "1393": {
      "op": "SWAP1"
    },
    "1394": {
      "op": "POP"
    },
    "1395": {
      "jump": "o",
      "op": "JUMP"
    },
    "1396": {
      "op": "JUMPDEST"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1401": {
      "op": "DUP3"
    },
    "1402": {
      "op": "DUP5"
    },
    "1403": {
      "op": "SUB"
    },
    "1404": {
      "op": "SLT"
    },
    "1405": {
      "op": "ISZERO"
    },
    "1406": {
      "op": "PUSH2",
      "value": "0x586"
    },
    "1409": {
      "op": "JUMPI"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1412": {
      "op": "DUP1"
    },
    "1413": {
      "op": "REVERT"
    },
    "1414": {
      "op": "JUMPDEST"
    },
    "1415": {
      "op": "DUP2"
    },
    "1416": {
      "op": "CALLDATALOAD"
    },
    "1417": {
      "op": "DUP1"
    },
    "1418": {
      "op": "ISZERO"
    },
    "1419": {
      "op": "ISZERO"
    },
    "1420": {
      "op": "DUP2"
    },
    "1421": {
      "op": "EQ"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1425": {
      "op": "JUMPI"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1428": {
      "op": "DUP1"
    },
    "1429": {
      "op": "REVERT"
    },
    "1430": {
      "op": "JUMPDEST"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1433": {
      "op": "DUP3"
    },
    "1434": {
      "op": "NOT"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "GT"
    },
    "1437": {
      "op": "ISZERO"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x5B7"
    },
    "1441": {
      "op": "JUMPI"
    },
    "1442": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1449": {
      "op": "SHL"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1452": {
      "op": "MSTORE"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1462": {
      "op": "REVERT"
    },
    "1463": {
      "op": "JUMPDEST"
    },
    "1464": {
      "op": "POP"
    },
    "1465": {
      "op": "ADD"
    },
    "1466": {
      "op": "SWAP1"
    },
    "1467": {
      "jump": "o",
      "op": "JUMP"
    },
    "1468": {
      "op": "JUMPDEST"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1471": {
      "op": "DUP1"
    },
    "1472": {
      "op": "DUP3"
    },
    "1473": {
      "op": "MSTORE"
    },
    "1474": {
      "op": "DUP2"
    },
    "1475": {
      "op": "DUP2"
    },
    "1476": {
      "op": "ADD"
    },
    "1477": {
      "op": "MSTORE"
    },
    "1478": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1513": {
      "op": "DUP3"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "op": "SWAP1"
    },
    "1520": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "aa616e29ea1997c9c603be378b9860b8e673c73d",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./StakeToken.sol\";\n\ncontract TestFarm is Ownable {\n    StakeToken public stakeToken;\n    bool public testingAllowed;\n    uint256 public maxAmount;\n    mapping(address => uint256) public addressToAmount;\n    uint256 totalMinted;\n\n    constructor(address _stakeToken) public {\n        stakeToken = StakeToken(_stakeToken);\n\n        testingAllowed = false;\n        maxAmount = 1000 * 10**18;\n        totalMinted = 0;\n    }\n\n    function mint(address _user, uint256 _amount) public {\n        require(testingAllowed, \"Testing is not allowed right now\");\n        require(\n            addressToAmount[_user] + _amount <= maxAmount,\n            \"You have requested too much!\"\n        );\n        stakeToken.mint(_user, _amount);\n        addressToAmount[_user] += _amount;\n        totalMinted += _amount;\n    }\n\n    function setTestingAllowed(bool _allowed) public onlyOwner {\n        testingAllowed = _allowed;\n    }\n\n    function setMaxAmount(uint256 _amount) public onlyOwner {\n        maxAmount = _amount;\n    }\n\n    function getUserAmountMinted(address _user) public view returns (uint256) {\n        return addressToAmount[_user];\n    }\n\n    function getTotalMinted() public view returns (uint256) {\n        return totalMinted;\n    }\n}\n",
  "sourceMap": "195:1210:6:-:0;;;408:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;458:10:6;:36;;-1:-1:-1;;;;;;505:22:6;-1:-1:-1;;;;;458:36:6;;;505:22;;;;;;549:13;537:9;:25;458:10;572:11;:15;195:1210;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;:::-;195:1210:6;;;;;;",
  "sourcePath": "contracts/TestFarm.sol",
  "type": "contract"
}